package test;import java.io.ByteArrayInputStream;import java.io.ByteArrayOutputStream;import java.io.IOException;import java.io.ObjectInputStream;import java.io.ObjectOutputStream;import java.io.Serializable;public class DeepCopyBean implements Serializable {	private String objectField;	private int primitiveField;	private MyObj obj = MyObj.getInstace();	// getters and setters ...	public DeepCopyBean deepCopy() {		try {			ByteArrayOutputStream buf = new ByteArrayOutputStream();			ObjectOutputStream o = new ObjectOutputStream(buf);			o.writeObject(this);			ObjectInputStream in = new ObjectInputStream(new ByteArrayInputStream(buf.toByteArray()));			return (DeepCopyBean) in.readObject();		} catch (IOException e) {			e.printStackTrace();		} catch (ClassNotFoundException e) {			e.printStackTrace();		}		return null;	}	private MyObj getObj() {		return this.obj;	}	public static void main(String[] args) {		DeepCopyBean obj = new DeepCopyBean();		System.out.println(obj);		System.out.println(obj.deepCopy());				System.out.println(obj.getObj());		System.out.println(obj.deepCopy().getObj());	}}